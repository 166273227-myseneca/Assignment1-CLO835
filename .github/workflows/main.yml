name: Deploy to ECR

on: 
  push:
    branches: [ dev ]

jobs:

  build:

    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Configure AWS credentials
      run: |
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        echo "aws_session_token = ${{ secrets.AWS_SESSION_TOKEN }}" >> ~/.aws/credentials
        echo "region = us-east-1" >> ~/.aws/credentials

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, test, tag, and push image to Amazon ECR database
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ass1_repository
        IMAGE_TAG: v1.1
      run: |
        # cd Chapter02/kubia/
        # ls -ltra
        # Docker build image database
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
        # Docker push image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Build, test, tag, and push image for Amazon ECR app
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ass1_repository
        IMAGE_TAG: v1.1
      run: |
        # cd Chapter02/kubia/
        # ls -ltra
        # Docker build app
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
        # Docker push
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

